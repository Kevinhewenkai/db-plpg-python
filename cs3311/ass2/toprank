#!/usr/bin/python3

import sqlite3, sys

if len(sys.argv) != 3:
    print("Usage:",sys.argv[0]," Genres MinRating")
    sys.exit(1)

try:
    con = sqlite3.connect('a2.db')
except Exception as e:
    print("Unable to connect with database")

cur = con.cursor()

genres = sys.argv[1].lower()

minRating = sys.argv[2]

genre_list = genres.split("&")

query = ''

insert_query = '''
select m.title, m.year, m.content_rating, m.lang, r.imdb_score, r.num_voted_users
from movie m
    join rating r on (m.id = r.movie_id)
    join genre g on (m.id = g.movie_id)
where r.imdb_score >= {} and lower(g.genre) like "{}"
'''

empty_query = '''
select m.title, m.year, m.content_rating, m.lang, r.imdb_score, r.num_voted_users
from movie m
    join rating r on (m.id = r.movie_id)
    join genre g on (m.id = g.movie_id)
where r.imdb_score >= {}
order by r.imdb_score desc, r.num_voted_users desc
'''

order = '''
order by r.imdb_score desc, r.num_voted_users desc
'''
query += insert_query.format(minRating, genre_list[0])

for i in range (1, len(genre_list)):
    query += 'INTERSECT'
    query += insert_query.format(minRating, genre_list[i])

query += order

cur.execute(query)

i = 1
for t in cur.fetchall():
    a, b, c, d, e, f = t
    e = ('%.1f'%float(e))
    if b == None and c != None:
        print('{}. {} ({}, {}) [{}, {}]'.format(i, a, c, d, e, f))
    elif b == None and c == None:
        print('{} ({}) [{}, {}]'.format(a, d, e, f))
    elif c == None and b != None:
        print('{}. {} ({}, {}) [{}, {}]'.format(i, a, b, d, e, f))
    else:
        print('{}. {} ({}, {}, {}) [{}, {}]'.format(i, a, b, c, d, e, f))
    i += 1

if (genres == ""):
    exist_list = []
    cur.execute(empty_query.format(minRating))
    j = 1
    for t in cur.fetchall():
        a, b, c, d, e, f = t
        e = ('%.1f'%float(e))
        string = ''
        if b == None and c != None:
            string = '{} ({}, {}) [{}, {}]'.format(a, c, d, e, f)
        elif (b == None and c == None):
            string = '{} ({}) [{}, {}]'.format(a, d, e, f)
        elif c == None and b != None:
            string ='{}. {} ({}, {}) [{}, {}]'.format(i, a, b, d, e, f)
        else:
            string = '{} ({}, {}, {}) [{}, {}]'.format(a, b, c, d, e, f)
        if (string not in exist_list):
            print(str(j) + '. ' + string)
            exist_list.append(string)
            j += 1
